The aim of this free Python library is to enable you to carry out finite element simulations with ease.

Four simulation types are currently available:
- elastic (static and dynamic) examples in /codes/Elasticity and /codes/Dynamic
- beam structure (static Euler-Bernoulli) examples in /codes/Beam
- thermal (stationary and transient) examples in /codes/Thermal
- damage (quasi-static phase field) examples in /codes/PhaseField

For each simulation, you need to build a mesh and a model. Once the simulation has been created, you can set boundary conditions, solve and display results.

# --------------------------------------------------------------------------------------------
# INSTALLATION
# --------------------------------------------------------------------------------------------
Python >= 3.9 is strongly recommended !

Step 1 - install python libraries:
    (required) :
    numba scipy numpy matplotlib gmsh(>=4.12.0) colorama pandas tikzplotlib

    (optional) :
    mpi4py pypardiso petsc petsc4py mumps scikit-umfpack scikits-sparse

    The following libraries are optional but can be useful to reduce your resolution time (solve Ax=b). I recommend the use of pypardiso or petsc4py. Otherwise, the resolution time will be much slower. Note that pypardiso does not work with ARM processors

Step 2 - add the folder/PythonEF/modules file to the pythonpath:

    folder refers to the directory where PythonEF is installed
	
	on macOs :
		export PYTHONPATH="$PYTHONPATH:folder/PythonEF/modules"
		(in the .zprofile)

	on linux :
		export PYTHONPATH=$PYTHONPATH:folder/PythonEF/modules
        (in the .bash_aliases)
		
	on windows : 
		modify system variables -> environment variables -> user variables
		PYTHONPATH folder/PythonEF/modules
        

(Optional) Procedure if you have to build gmsh yourself:

	first you have to install opencascade : sudo port install opencascade
	then install fltk : sudo port install fltk

	On Mac you have to build the gmsh project
	https://gitlab.onelab.info/gmsh/gmsh
	In the applications folder:

	git clone 
	cd gmsh
	mkdir build
	cd build
	cmake -DCMAKE_INSTALL_PREFIX=/Applications/gmsh-install -DENABLE_BUILD_DYNAMIC=1 ..
	make 
	make install

	then add the path to gmsh.py
	export PYTHONPATH="$PYTHONPATH:/Applications/gmsh-install/lib"